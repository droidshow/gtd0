
* NOTES
** AIY
- aiyprojects-raspbian : https://github.com/google/aiyprojects-raspbian
- assistant-sdk-python : https://developers.google.com/assistant/sdk/
-                      : https://github.com/googlesamples/assistant-sdk-python -- samples and bindings
- google-assistant-library 
*** assistant-sdk-python 
-  https://developers.google.com/assistant/sdk/

Captures the audio request and passes it to Google Assistant.
Google Assistant returns the text of the requrest and a response audio.
Interface with Google Actions for perform custom actions

2 ways to use 
**** Google Assistant Library for Python for linux ARM/x-86
- Wraps and exposes event based APIs
- Can be extended
- Hands free activation with hot word "Ok Google"
- Features audio capture and playback, conversation state management, timer and alarm
- https://developers.google.com/assistant/sdk/develop/python/
- https://github.com/googlesamples/assistant-sdk-python -- samples and bindings
- Create a project
- Goto Google Console, enable Google Assistant API, and generate OAuth ID download the device secret json file
- The device secret is necessary for the Google Assistant SDK sample to make Google Assistant queries.
- Set activity controls: Web & App activity, Device Information, Voice & Audio activity

**** Google Assitant gRPC API
- low level apis for more flexibility and other platform and language support
- https://developers.google.com/assistant/sdk/develop/grpc/

**** STARTED Extend the assistan with unique functionalities with Google Actions
- https://developers.google.com/actions/
- Use dialogflow to build apps

*** custom command
- combine the activate by button and the local commands to detect custom words
- will put it in always listen mode

** ANDROID
https://developer.android.com/training/basics/firstapp/running-app.html

*** AOSP customization
https://elinux.org/images/2/29/Customizing_AOSP_for_my_Device.pdf
https://developer.android.com/guide/topics/resources/providing-resources.html#AlternativeResources
  
*** Build, NDK 
http://web.guohuiwang.com/technical-notes/androidndk1

*** Build, Utils
   lunch:   lunch <product_name>-<build_variant>
   tapas:   tapas [<App1> <App2> ...] [arm|x86|mips|armv5] [eng|userdebug|user]
   croot:   Changes directory to the top of the tree.
   m:       Makes from the top of the tree.
   mm:      Builds all of the modules in the current directory, but not their dependencies.
   mmm:     Builds all of the modules in the supplied directories, but not their dependencies.
            To limit the modules being built use the syntax: mmm dir/:target1,target2.
   mma:     Builds all of the modules in the current directory, and their dependencies.
   mmma:    Builds all of the modules in the supplied directories, and their dependencies.
   cgrep:   Greps on all local C/C++ files.
   jgrep:   Greps on all local Java files.
   resgrep: Greps on all local res/*.xml files.
   godir:   Go to the directory containing a file.

   make modules: List of all modules

*** Android Security & Permissions & user id & OTA
https://boundarydevices.com/android-security-part-1-application-signatures-permissions/
https://boundarydevices.com/android-security-part-2-ota-updates/
selinux
https://boundarydevices.com/android-security-part-3-security-enhanced-linux-in-android/
*** Android Services
https://developer.android.com/guide/components/services.html
https://developer.android.com/reference/android/app/Service.html
https://developer.android.com/guide/topics/manifest/service-element.html

Tutorial
http://www.vogella.com/tutorials/AndroidServices/article.html

**** Background service with IntentService
https://developer.android.com/training/run-background-service/create-service.html
https://developer.android.com/training/run-background-service/index.html

**** 1) Started service

**** 2) Bound service
https://developer.android.com/guide/components/bound-services.html

A bound service is the server in a client-server interface. It allows components (such as activities) to bind to the service, send requests, receive responses, and perform interprocess communication (IPC). A bound service typically lives only while it serves another application component and does not run in the background indefinitely.
*** Android Studio
https://developer.android.com/studio/intro/index.html

32 bit libraries
sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386

KVM support
https://help.ubuntu.com/community/KVM/Installation
sudo apt-get install qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils 
 ia32-libs is hacky, no longer available in ubuntu, if needed
  sudo dpkg --add-architecture i386
  sudo apt-get -qqy update
  sudo apt-get -qqy install libncurses5:i386 libstdc++6:i386 zlib1g:i386

*** Android System Service in 5 example, Adding New 
https://www.linaro.org/blog/adding-a-new-system-service-to-android-5-tips-and-how-to/
https://github.com/jmondi/hardware_joffee
https://github.com/gibsson/BasicService

*** Android on Beagle Board / HAL
https://books.google.com/books?id=8bq9BgAAQBAJ&lpg=PA22&ots=mFKaN0vEvm&dq=access%20custom%20hardware%20using%20android%20native%20library&pg=PA22#v=onepage&q=access%20custom%20hardware%20using%20android%20native%20library&f=false
http://www.opersys.com/blog/extending-android-hal
*** Bootanimation, android
https://android.googlesource.com/platform/frameworks/base/+/master/cmds/bootanimation/FORMAT.md
zip command
zip -0qry -i \*.txt \*.png \*.wav @ ../bootanimation.zip *.txt part*

*** Bionic Linker/Loader
android/bionic/linker/linker.c 
only considers LD_LIBRARY_PATH 
and hardcoded array of "/vendor/lib" and "/system/lib".
completely ignores RPATH in the ELF. 

For placing shared libraries (.so)
Specify LD_LIBRARY_PATH in Android.mk
or place them in /system/lib or /vendor/lib

*** Git
- SERVER
mkdir /srv/git/gtd3/android/<project>.git
cd /srv/git/gtd3/android/<project>.git
git init --bare --shared

- CLIENT:
cd <>
git config --local user.name "<>"
git config --local user.email "<>"
git init
git add .
git commit -m "Initial commit"
git remote add origin git@<>:/srv/git/gtd3/android/<project>.git
git push origin master


*** Graphics
https://elinux.org/images/2/2b/Android_graphics_path--chis_simmonds.pdf
https://source.android.com/devices/graphics/
https://gist.github.com/olvaffe/d2fc280a288ab816c465c3a968098bb1
https://charleszblog.wordpress.com/2014/02/24/understanding-android-graphics-internals-surfaceflingerv/
https://community.nxp.com/docs/DOC-93612
HW Composer
https://source.android.com/devices/graphics/implement-hwc
https://wiki.mozilla.org/Platform/GFX/hwcomposer
Surface flinger and HW composer
https://source.android.com/devices/graphics/arch-sf-hwc
*** Launcher, default
Android.mk
LOCAL_OVERRIDES_PACKAGES := Launcher2 Launcher3
make installclean
*** Localisation / Language
https://developer.android.com/distribute/best-practices/launch/localization-checklist.html?utm_source=udacity&utm_medium=course&utm_campaign=android_basics#manage-strings
**** xliff
<xliff:g id="" example=""></xliff:g>
*** Log
String tag = "[";
tag += this.getClass().toString();
tag += " :: ";
tag += Thread.currentThread().getStackTrace()[1].getMethodName().toString();
tag += "]";
Log.i(tag, "Message");
*** Message Queues
- Does not support poxis messages
- Beacuse can be potentially leaky and doesn't play well when system wants to kill process to save memory
- Use Binders

*** NDK build
http://web.guohuiwang.com/technical-notes/androidndk1

*** Networking
https://www.raywenderlich.com/126770/android-networking-tutorial-getting-started
*** Repo
https://stackoverflow.com/questions/6136789/cloning-android-sources-to-a-local-repository-server
repo forall -c 'echo "$REPO_PATH : $REPO_PROJECT"'

*** Resources, texts, colors
https://developer.android.com/guide/topics/resources/providing-resources.html

To prevent aapt running to check the hardcoded string in teh local
Android.mk
 LOCAL_MODULE_TAGS := tests 

res/values/strings.xml:

 <?xml version="1.0" encoding="utf-8"?>
 <resources>
     <string name="fellow">Fellow</string>
 </resources>

activity_main.xml

 <TextView android:layout_width="fill_parent"
           android:layout_height="wrap_content"
           android:text="@string/fellow" />

Similarly colors should be stored in colors.xml and then referenced by using @color/color_name

<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="Black">#000000</color>
</resources>



*** Screen resolution
Emulated screen resolution
wm size
wm overscan
wm density
*** Splash screen .rle
mmm build/tools/rgb2565

Gimp
-- Start with a PNG image
-- Under the Image tab, set the mode to indexed at 16 colors. If it's already set to indexed, set it to RGB, then set it back to indexed at 16 colors.
-- In the Layers window, first merge all layers together (can be tricky), then right-click and select remove alpha channel (this may mess up your image, transparency isn't allowed though)
-- Save as a PNG file, and uncheck all boxes in the PNG dialog, leaving compression at 9.

ImageMagick
-- Use the Convert function to change the PNG to a RAW format:
Code:
convert -depth 8 MY_IMAGE.png rgb:MY_IMAGE.raw
rgb2565
-- Convert the RAW image to RLE format:
Code:
rgb2565 -rle < MY_IMAGE.raw > MY_IMAGE.rle


*** JNI 

tutorial
http://www.integratingstuff.com/2010/12/12/calling-native-c-code-through-jni-in-android-applications/
https://github.com/thoeni/ndk-tutorials
https://www.ibm.com/developerworks/java/tutorials/j-jni/j-jni.html

documentation
https://developer.android.com/training/articles/perf-jni.html
https://docs.oracle.com/javase/7/docs/technotes/guides/jni/spec/jniTOC.html


REFERENCES
https://stackoverflow.com/questions/3232718/how-to-add-a-system-service-to-the-android-framework

https://stackoverflow.com/questions/19926657/java-method-is-not-invoked-when-calling-it-from-native-pthread
https://github.com/YaMike/JavaServiceTest


** BUILD SYSTEMS
*** Meson-Ninja
http://mesonbuild.com
https://ninja-build.org/
*** Yocto
** CODE ANALYSIS
*** clang
clang++ -S -emit-llvm main1.cpp -o - | opt -analyze -dot-callgraph
$ dot -Tpng -ocallgraph.png callgraph.dot

for i in `ls *.ll`; do cat $i | opt -analyze -dot-callgraph && mv callgraph.dot $i.dot; done

for i in `ls *.o`; do cat $i | opt -analyze -dot-callgraph && mv callgraph.dot $i.dot; done

for i in `ls *.o`; do cat $i | opt -analyze -dot-callgraph && mv callgraph.dot $i.dot; done
for i in $(ls *.dot); do dot -Tpng -o$i.png ./$i; done

Could not figure out a good way to analyze multiple files. 
Some of the things tried :
 cat *.dot > big.dot
 Manually combile all diagraphs
 Generates a big png with individual separate graphs.
 The png gets downscaled for large file.


*** doxygen

Install graphviz, doxygen, doxygen-gui
Select directory
Set directory for the output files
Set "Recursive" in Input
Set "Have Dot" and unset "Dot cleanup"
Select only required kind of graph, do not select everything

cat *.dot | gvpack -u -o big.dot
sed 's/_gv[0-9]\+//g' big.dot > big1.dot
dot -Tsvg -obig1.svg ./big1.dot



Combining graphs
https://stackoverflow.com/questions/16488216/graph-of-graphs-in-graphviz

** ENCRYPTION
http://lifehacker.com/a-beginners-guide-to-encryption-what-it-is-and-how-to-1508196946
http://lifehacker.com/five-best-file-encryption-tools-5677725
http://lifehacker.com/whats-the-best-file-encryption-tool-1683834660

** GIT
*** Initial Setup and Config
git config --local user.name "om"
git config --local user.email "om@--.com"
git config --local core.editor emacs
git config --global credential.helper cache
git config --list
git config user.name
git config --global diff.tool bc3
git config --global alias.lod "log --oneline --decorate"
git config --global alias.glod "log --oneline --decorate --graph --all"
git config --global alias.difs "difftool --dir-diff --no-symlinks"
git config --global alias.co "checkout"
.gitignore
The rules for the patterns you can put in the .gitignore file are as follows:
 Blank lines or lines starting with # are ignored.
 Standard glob patterns work.
 You can start patterns with a forward slash (/) to avoid recursivity.
 You can end patterns with a forward slash (/) to specify a directory.
 You can negate a pattern by starting it with an exclamation point (!).

Glob patterns are like simplified regular expressions that shells use. 
An asterisk (*) matches zero or more characters; 
[abc] matches any character inside the brackets (in this case a, b, or c); 
a question mark (?) matches a single character; 
and brackets enclosing characters separated by a hyphen ([0-9]) matches any character between them (in this case 0 through 9). 
You can also use two asterisks to match nested directories; a/**/z would match a/z, a/b/z, a/b/c/z, and so on.


*** Basics
Initializing a repo
 git init

Adding files to be tracked
 git add <filename | directory >
Giving Directory name will add the entire contents of the directory into tracking
Its a multi-purpose command it can
Add file for tracking
Add file for staging
Merg-conflicted files as resolved

Committing the changes
 git commit -m 'some commit message'

Cloning existing repos
 git clone <repo-url>

Cloning to a specific directory
 git clone <repo-url> <dir>

url can use 
 https:// 
 git://
 user@server:path/to/repo.git

Checking the working tree status
 git status
Short status
 git status [-s | --short]
| 1st col    | 2nd col      |                           |
| Stage area | Working area |                           |
|------------+--------------+---------------------------|
| ?          | ?            | Untracked file            |
|            | M            | Unstaged file             |
| M          | M            | Staged and modified again |
| A          |              | Newly added staged file   |
| M          |              | Staged file               |


Check differences in *un* staged files
 git diff

Check differences in *staged* files
 git diff [--staged | --cached]

Commiting the staged changes
 git commit // launches editor for entering commit message
 git commit -m 'Commit message'
 git commit -a // auto adds all tracked changed files

Removing a file completely
 [rm <filename>]
 git rm <filename> //stages for removal
 git commit -m 'message'
 git rm -f <filename> // force removal, if it has local changes

Removing a file from tracking or Untracking a file
 git rm --cached <filename>

Moving or Renaming a file
 git mv file_from file_to

Checking commit logs
 https://git-scm.com/book/en/v2/Git-Basics-Viewing-the-Commit-History#log_options
 git log
 git log -p -2 # Details of last 2 checkins
 git log --stat # Displays statistics like files modifed and the extent of modification
 git log --pretty=oneline --graph
 git log --pretty=format:"%h - %an, %ar : %s"
 git log --since=yyyy-mm-dd
 git log --author=""
 git log --grep="" # use --all-match to use author and grep together
 git log -S function_name

*** Undoing
Amending last commit
 git commit --amend

Unstaging a staged file
 git reset HEAD <file>

Revert to previous commit (throwing away local changes)
 git checkout <hash> -- <file>

LINK:
https://github.com/blog/2019-how-to-undo-almost-anything-with-git

*** Remotes
Adding a remote
 git remote add <name> <remote url>

List of remotes
 git remote -v

Fetch remote repo, but not merge
Gets all the branches and makes available for inspection or merging
 git fetch <remote-name>
Tries to merge to local repo from the tracked remote repo
 git pull

Pushing changes to remote
 git push <remote> <branch>
 git push origin master

Show remote details
 git remtoe show <remote-name>

Rename a remote
 git remote rename <org-name> <new-name>

Remove a remote
 git remote remove <remote-name>

*** Tag
List tags
 git tag # NOTE: Order is alphabetical NOT chronological

List tags with patterns
 git tag -l "v1." 

Two types: light-weight and Annotated (-a)

i) Ligt Weigth
 git tag <tag-name>

ii) Annotated tags
 git tag -a <tag-name> -m "tag msg"

Tagging a specific commit
 git tag -a v1.2 <commit-hash>

NOTE: git push will not push tags unless explicitly requested

Push one tag
 git push origin <tag-name> 

Push all tags
 git push origin --tags

Checkout a tag as a branch
 git checkout -b <branch-name> <tag-name>

Checkout a tag
 git clone
 git tag -l
 git checkout tags/<tag_name>

*** Alias
Alias
 git config --global alias.<alias-name> <command>
Example
 git config --global alias.co checkout
Usage 
 git co
Deleting alias
 git config alias.<name> unset

git config --global alias.lod "log --oneline --decorate"
git config --global alias.glod "log --oneline --decorate --graph --all"

*** *Branching*
Light weigth branching
Branch names are pointers to commit blobs
Head is a pointer to the current Branch pointer

*WORKFLOW*
 git co -b <branch-name>
 git commit -am "<commit-msg>"
 git co master
 git merge <branch-name>
 git branch --merged
 git branch -d <branch-name>
 git mergetool

Create branch
 git co -b <branchname>
 git branch <branch name> 
 git log --oneline --decorate #check where the HEAD pointer 
 git glod #alias

Switch to branch
 git checkout <branchname>

Create branch and switch to branch
 git checkout -b <branchname>

Create branch from some other point
 git branch branchname <sha1-of-commit>
 git branch branchname HEAD~3

Merging
 git checkout <master>
 git merge <branchname>
 git branch -d <branchname> # delete branch after merging

Rebase
Generates patch for each commit in branch and applies it on
-i (interactive) lets squasing, changing commit messages etc.
If not merge this will be like pulling in master's changes into branch.
In other words basing the branch from latest changes in master.

 git rebase -i <master> # From branch to rebase
 git co <master>
 git merge <branch>

To pull recent changes from master branch to current branch
 git merge <master>
 
On conflict
Resolve conflict and add

 git mergetool # visual tool for merging and removing conflict

Branch management
 git branch             # List of branches
 git branch  -v         # List of branches with the last commit
 git branch --merged    # branches which have been merged to current branch and so can be deleted
 git branch --no-merged # branches that haven't been merged, needs -D to force delete
 
Remote Branch
 git fetch <remote-name>       # Update local database with the remote 
 git fetch --all; git branch -vv # Status of all branches and what it is tracking
 git push <remote> <branch>    # Share a branch with the git server
 git push <remote> <branch-name>:<alternate-branch-name> # Renaming a branch before pushing to server
 git merge <remote>/<branch>   # Merging changes from a remote branch
 git checkout -b <branch-name> <remote>/<branch-name> # Pulling a remote barnch as a local branch
 git checkout --track <remote>/<branch-name>          # Same as above
 git checkout <remote-branch-name>                    # Same as above 
 git branch -u <remote>/<branch-name>  # Current branch to track upstream branch
 @{u}      # alias to upstream e.g git merge origin/master = git merge @{u}
 git pull  # git fetch + git merge
 git push <remote> --delete <branch> # Delete a branch from the server


merging vs rebasing
https://www.atlassian.com/git/tutorials/merging-vs-rebasing

*** Stash
git difftool -d stash@{0} master

*** LINKS
http://rogerdudler.github.io/git-guide/
https://git-scm.com/book/en/v2
https://help.github.com/
https://git-scm.com/docs

Branching
http://nvie.com/posts/a-successful-git-branching-model/

End of Line
http://adaptivepatchwork.com/2012/03/01/mind-the-end-of-your-line/
https://help.github.com/articles/dealing-with-line-endings/

core.autocrlf=true:      core.autocrlf=input:     core.autocrlf=false:

        repo                     repo                     repo
      ^      V                 ^      V                 ^      V
     /        \               /        \               /        \
crlf->lf    lf->crlf     crlf->lf       \             /          \      
   /            \           /            \           /            \


Git attribute templates
https://github.com/alexkaratarakis/gitattributes

Git ignore templates
https://github.com/github/gitignore

*** REF GITIGNORE

**** Android Studio
*.iml
.gradle
/local.properties
/.idea/workspace.xml
/.idea/libraries
.idea
.DS_Store
/build
/captures
.externalNativeBuild


**** Android etc
# Created by https://www.gitignore.io/api/android,osx,windows,linux,intellij,java

### Android ###
# Built application files
*.apk
*.ap_

# Files for the Dalvik VM
*.dex

# Java class files
*.class

# Generated files
bin/
gen/

# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Proguard folder generated by Eclipse
proguard/

# Log Files
*.log

# Android Studio Navigation editor temp files
.navigation/

### Android Patch ###
gen-external-apklibs


### OSX ###
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk


### Windows ###
# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msm
*.msp

# Windows shortcuts
*.lnk


### Linux ###
*~

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*


### Intellij ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio

*.iml

## Directory-based project format:
.idea/
# if you remove the above rule, at least ignore the following:

# User-specific stuff:
# .idea/workspace.xml
# .idea/tasks.xml
# .idea/dictionaries

# Sensitive or high-churn files:
# .idea/dataSources.ids
# .idea/dataSources.xml
# .idea/sqlDataSources.xml
# .idea/dynamic.xml
# .idea/uiDesigner.xml

# Gradle:
# .idea/gradle.xml
# .idea/libraries

# Mongo Explorer plugin:
# .idea/mongoSettings.xml

## File-based project format:
*.ipr
*.iws

## Plugin-specific files:

# IntelliJ
/out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties


### Java ###
*.class

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear

*** WORKFLOW
- git diff --check # Remove white spaces
- git add -i       # Split changes to multiple commits

**** Commit message guide lines
Short (50 chars or less) summary of changes

More detailed explanatory text, if necessary.  Wrap it to
about 72 characters or so.  In some contexts, the first
line is treated as the subject of an email and the rest of
the text as the body.  The blank line separating the
summary from the body is critical (unless you omit the body
entirely); tools like rebase can get confused if you run
the two together.

Further paragraphs come after blank lines.

  - Bullet points are okay, too

  - Typically a hyphen or asterisk is used for the bullet,
    preceded by a single space, with blank lines in
    between, but conventions vary here

**** Check upstream for potential merge work
git fetch origin
#check for new changes in origin that are not in my_topic_branch
git log --no-merges my_topic_branch..origin/master

#merge topic branch to local master
git checkout master
git merge my_topic_branch

#merge master to origin/master
git merge origin/master


#push to origin, local master
git push origin master

*** Line Ending crlf
git config core.autocrlf [true|input|false]
1) true:             x -> LF -> CRLF
2) input:            x -> LF -> LF
3) false:            x -> x -> x

git rm --cached -r . 
git reset --hard

*** Bundle
git bundle create mygitbackup.bundle master
git bundle create mygitbackup.bundle --all

*** Revert
git co 
git co -- <filename>
git co -p # To pick what to discard from local changes

*** Patch and apply
Last commited patch, will generate a file 0001_<commit_message>
 git format-patch -1 <branch_name>

To patch to a specific name
 git format-patch -1 <branch_name> --stdout > <patch-file-name>.patch

Check if the patch applies
 git apply --check <patch-file-name>.patch

Inspect patch
 git apply --stat <patch-file-name>.patch

Apply patch
 git am --signoff <patch-file-name.patch


*** Undoing commits
Current condition, where C is your HEAD and (F) is the state of your files.

   (F)
A-B-C
    ^
  master

To nuke commit C and never see it again
 git reset --hard HEAD~1

The result is:

 (F)
A-B
  ^
master

Now B is the HEAD. Because of --hard, files are reset to their state at commit B.



If commit C wasn't a disaster, but just a bit off. 
Starting again from here, with C as your HEAD:

   (F)
A-B-C
    ^
  master

To undo the commit but keep the changes for a bit of editing before doing a better commit. 
 git reset HEAD~1

In this case the result is:

   (F)
A-B-C
  ^
master
In both cases, HEAD is just a pointer to the latest commit.
When doing a git reset HEAD~1, Git is told to move the HEAD pointer back one commit. 
But  you leave your files as they were.
So now git status shows the changes you had checked into C. 



undo your commit but leave your files and your index:

git reset --soft HEAD~1
This not only leaves your files alone, it even leaves your index alone. 
When you do git status, you'll see that the same files are in the index as before. 
In fact, right after this command, if git commit is run it would redoing the same commit you just had.

To resurrect destroyed commit as in the first example
  git reflog # select the commit sha from the list of (partial) commit shas that have been recently accsessed.
  git checkout -b someNewBranchName shaYouDestroyed

Commits don't actually get destroyed in Git for some 90 days, 
So commits didn't mean to get rid of can be rescued.

*** Extracting a folder into its own git repo
cp -r <old-repo> ~/backup_<old-repo>
git config --global alias.clone-branches '! git branch -a | sed -n "/\/HEAD /d; /\/master$/d; /remotes/p;" | xargs -L1 git checkout -t'
git clone ~/backup_<old-repo> <new-folder-repo>
cd ./<new-folder-repo>
git clone-branches
git remote rm origin
git remote add origin <remote-for-new-repo>
git remote -v
git filter-branch --subdirectory-filter <folder>/ --prune-empty -- --all
git push --all
git push --tags


*** REFERENCE
Separating topic branches
https://www.kernel.org/pub/software/scm/git/docs/howto/separating-topic-branches.txt

** GSTREAMER
Upstream : git://anongit.freedesktop.org/gstreamer/
           https://cgit.freedesktop.org/gstreamer/
Mirrored : https://github.com/GStreamer

FAQ
http://gstreamer.freedesktop.org/data/doc/gstreamer/head/faq/html/

DOCS
http://gstreamer.freedesktop.org/documentation

 GLib
 https://stackoverflow.com/questions/500501/material-to-learn-gobject-and-glib/501782#501782
 https://developer.gnome.org/glib/stable/

 GObject
 https://developer.gnome.org/gobject/stable/
:GSTREAMER:HEAD:1:  https://developer.gnome.org/gobject/stable/chapter-gobject.html

Push Pull Modes of Pads
https://gstreamer.freedesktop.org/data/doc/gstreamer/head/pwg/html/section-scheduling-randomxs.html
http://www.mediatools.cs.ucl.ac.uk/nets/newvideo/browser/gst-cvs/gstreamer/docs/design/part-push-pull.txt

E.g scenarios
http://fossies.org/linux/gstreamer/docs/design/part-scheduling.txt

Checkout and build
https://arunraghavan.net/2014/07/quick-start-guide-to-gst-uninstalled-1-x/
https://arunraghavan.net/talks/

Running with GDB
$ libtool --mode=execute gdb --args gstreamer/tools/gst-launch-1.0 videotestsrc ! videoconvert ! xvimagesink

*** Fresh checkout and build
Copy the notes here

*** STARTED Plugin Writers Guide                             :GSTREAMER:HEAD:
:GSTREAMER:HEAD:2: https://gstreamer.freedesktop.org/documentation/plugin-development/basics/testapp.html

**** Keywords and terminologies
Elements - GObjects based on GstElements that can be linked together
Plugins - (.so, .a, .dll)  encapsulate many (or one) element 
Pads - Ports on elements through which data communicates with other elements
GstMiniObject - Object type to hold buffer and events
Buffers - Hold Data and MetaData 
 MetaData can be TimeStamp or GstMemory
 Ususally memory is allocated. 
 Special cases 
  filesrc : mmaps file contentns to user space and buffers point to it
  GstBufferPool or GstAllocator can supply buffers to upstream elements (can be hw buffers)
Event - horrizontal communications - are used to communicate a media type, the end of a media stream or that the cache should be flushed.
Filters can work in-place or copy data or both
States - NULL, READY, PAUSED, PLAYING (paused and playing are almost same except for sink)
Signals - vertical comuunication with the app
Bus -
Messages -

**** Creating a new plugin (old)

shell $ git clone git://anongit.freedesktop.org/gstreamer/gst-template.git
shell $ cd gst-template/gst-plugin/src
shell $ ../tools/make_element MyFilter

**** Create a new plugin (new)
../../../gst-plugins-bad/tools/gst-element-maker MyFilter <baseParse>

**** Inits

***** Class Init - gst_my_filter_class_init()
 - Regsiter meta
 - Add properties
 - Register pad templates with element class

***** Plugin Init = myfilter_init()
 - Exposes the existence of the plugin
 - donot fail for resource missing

***** Element Init = gst_my_filter_init()
 - Create pad from pad template
 - set chain functions to receive and process data
 - set event function (optional)
 - set query function (optional)



*** Building test app
gcc -Wall myfilterapp.c -o myfilterapp $(pkg-config --cflags --libs gstreamer-1.0)

*** DEBUG
GST_DEBUG_BIN_TO_DOT_FILE_WITH_TS(GST_BIN(_pipeline),  GST_DEBUG_GRAPH_SHOW_ALL, "mygraph");

*** Cerbero
Upstream : git://anongit.freedesktop.org/gstreamer/cerbero
Mirrored : https://github.com/GStreamer/cerbero

Doc
https://github.com/centricular/cerbero-docs/blob/master/start.md
https://gstreamer.freedesktop.org/documentation/installing/building-from-source-using-cerbero.html


*** BASICS
A framework for creating streaming media applications. Inspired from DirectShow.
Based on plugins that will provide various functionalities, which can be linked to form pipelines, which defines the flow of data.
GUI editors are also available.

**** GSTREAMER TOOLS

***** gst-inspect

***** gst-launch

***** gst-eiditor

**** GSTREAMER CORE FRAMEWORK

***** Media agnostic base clasess

***** Message bus

***** Type negotiation

***** Plugin system

***** Synchronisation

**** GSTREAMER PLUGINS

***** Protocols
- http://
- file://
- rtsp://

***** Sources
- alsa
- v4l2 / DVB API
- tcp/udp
***** Formats / Containers
- avi
- mp4
- ogg

***** Codecs
- mp3
- mpeg4
- vorbis
- theora
***** Filters
- converters
- mixers
- effects

***** Sinks
- alsa
- xvideo
- tcp/udp

***** 3rd party


** STORAGE
*** HARD DISK HEALTH
sudo apt get install smartmontools
smartctl 
https://www.smartmontools.org/
https://wiki.archlinux.org/index.php/S.M.A.R.T.
*** Flash
**** NAND
***** Advantage
  Faster write and erase than NOR flash
  price / bit is lower
  space / bit is less
***** Disadvantage
  Block read/write access
  Has to be journaled and bad blocks managed
**** SPI NOR
***** Advantages
 Can be mapped to memory
 Allows random access to memory
 Code can be executed in place, without loading to memory
 Fast read
***** Disadvantages
 Slow write, very slow erase
 price / bit is higher
 takes more space / bit
***** Usage
 Good for storing programs, not data
***** SDCARD
***** eMMC
 Memory manager is embedded (unlike in NAND Flash)
 Don't have to journal the file system or manage bad blocks



** LINUX
*** FHS - File Hierarchy Standard
https://wiki.debian.org/FilesystemHierarchyStandard

*** Init Systems
System services, daemons, init

SysV init
Built on older concepts
Cannot natively detect hw and load firmware
Simplified view of possible states of computer, might cause problem in server (ok for personal use)
- single-user
- single-user with networking
- multi-user
- multi-user graphical
- reboot
- halt
Init is done serially one after another, resulting in longer boot times
E.g service dummy start

Upstart
Introduced by Canonical in Ubuntu 6.10 (Edgy Eft) (2006)
Backward compatible with 
Depends on DBus

systemd 
Introduced by Red Hat in Fedora 15 (2010)
Depeneds on DBus
Comprehensive, huge and complex
Used in : Fedora, OpenSuSE, Arch, RHEL, CentOS
Avoids delay? How? Parallel?
Process tracking using kernel cgroup (not PID)
systemd-logind
Integrated with gnome
Not POSIX
All in one
E.G.> systemctl start dummy.service

OpernRC
sinit
runit
shepherd
s6
Epoch
Mudar

**** LINKS
SysVInit to SystemD Init Cheatsheet
https://fedoraproject.org/wiki/SysVinit_to_Systemd_Cheatsheet
https://linoxide.com/linux-command/systemd-vs-sysvinit-cheatsheet/

*** I2C - Userspace access
https://www.kernel.org/doc/Documentation/i2c/dev-interface
http://elinux.org/Interfacing_with_I2C_Devices

*** Kernel Debugging 
https://www.elinux.org/Kernel_Debugging_Tips
https://elinux.org/Debugging_by_printing
*** Secure programming
https://www.dwheeler.com/secure-programs/Secure-Programs-HOWTO/index.html

*** Symbols
insmod hello.ko
cat /proc/kallsyms | grep hello
cat Module.symvers
nm hello.ko

** NETWORKING
Wireshark TCP / IP / ETHERNET packet analysis
http://networkstatic.net/what-are-ethernet-ip-and-tcp-headers-in-wireshark-captures/

** Oracle
https://docs.oracle.com/cd/B28359_01/index.htm
** RASPBERRYPI 

*** STARTED https://www.raspberrypi.org/documentation/linux/           
**** STARTED https://www.raspberrypi.org/documentation/linux/usage/README.md :RPI:HEAD:
***** DONE https://fedoramagazine.org/what-is-an-init-system/   :RPI:

*** AUDIO BOARDS
https://www.hifiberry.com/build/gallery/

*** BACKUP
function mkbackup () { tar czvf $(date +%F_%H%M)_$(basename "$1").tgz "$1"; }

**** home
cd /home/
sudo tar czf my_home_$(date +%F_%H%M).tar.gz pi
cp my_home*.tar.gz /mnt/usb

**** mysql
mysqldump -uroot -ppass recipes > recipes_$(date +%F_%H%M).sql

***** Create a new sql db and restore from backup
mysql -Bse "create database recipes"
cat recipes*.sql | mysql recipes

**** sdcard image
sudo dd bs=4M if=/dev/sdb of=raspbian_$(date +%F_%H%M).img
sudo dd bs=4M if=raspbian*.img of=/dev/sdb
sudo dd bs=4M if=/dev/sdb | gzip > rasbian_$(date +%F_%H%M).img.gz
gunzip --stdout rasbian*.img.gz | sudo dd bs=4M of=/dev/sdb


*** Bluetooth serial port
https://hacks.mozilla.org/2017/02/headless-raspberry-pi-configuration-over-bluetooth/
https://www.raspberrypi.org/forums/viewtopic.php?t=138145

*** Build using Yocto
https://github.com/Nuand/bladeRF/wiki/Creating-Linux-based-Embedded-System-Images-with-Yocto
http://www.jumpnowtek.com/rpi/Raspberry-Pi-Systems-with-Yocto.html

*** Building NOOBS from source

get_package_version

get_kernel_version
update_github_kernel_version
select_kernelconfig


output in output/images directory

Command line
 update-firmware
  update_gtihub_package_version( PACKAGE=rpi-firmware, GITHUB_REPO=rapberrypi/firmware, BRANCH=stable )
  // updates the broadcom firmware binaries from git raspberrypi/firmware stable 

 update-userland
  update_gtihub_package_version( PACKAGE=rpi-userland, GITHUB_REPO=rapberrypi/userland, BRANCH=master )

 update-kernel
  update_gtihub_package_version( GITHUB_REPO=rapberrypi/linux, BRANCH=rpi-4.4.y )

 skip-kernel-rebuild
  build recovery without comletely rebuilding both kernels

 nobuild

ERR : noob build fail: RCC: Error in 'icons.qrc': Cannot find file 'translation_ca.qm'
SLN :  ./buildroot/output/host/usr/bin/lrelease ./recovery/translation_*.ts

*** CONFIG
https://github.com/RPi-Distro/raspi-config

sudo raspi-config // /boot/config.txt
 user/password
 hostname
 ssh
 spi/i2c/serial/audio

vcgencmd get_config <config>

**** Initial Config
passwd #change default password
Edit .bashrs under /etc/skel
sudo adduser <username>
update-alternatives --set editor /usr/bin/vim.tiny
sudo visudo
<username>   ALL = NOPASSWD: ALL
sudo userdel -r pi
sudo reboot
#login with new <username>
sudo raspi-config
#check user/password
#change hostname
#enable ssh
#enable spi/i2c/serial/audio

***** DO Customisation script/patch-file for new installs

**** Audio
amixer cset numid=3 0 # 0:Auto 1:Analog 2:HDMI

****  Change host name
  sudo hostname <name>
  sudo raspi-config

**** Creating new me user
  sudo adduser me
  sudo usermod -G git-scm me
  id me
  sudo mkdir /t
  sudo chown me:me /t
  sudo visudo
  sudo useradd me sudo
  groups
  sudo usermod -G sudo me
  su me

**** Preparting GTD
Generate git keys
  ssh-keygen
  cp ./.ssh/id_rsa_rpi.pub /tmp

  mkdir -p show/gtd
  cd ./show/gtd/
  git clone git@<git-loc>:/srv/git/gtd2.git
  cp ./gtd2/ref.emacs ~
  mv ~/ref.emacs .emacs
  emacs ~/.emacs

Create GTD link
  ln -s /home/me/show/gtd/ /t

*** Disable screen saver
/etc/lightdm/lightdm.conf 
dpmsxserver-command=X -s 0 -dpms

*** firmware
Pre-compiled binaries of the current Raspberry Pi kernel and modules, userspace libraries, and bootloader/GPU firmware.
**** ./boot: *start.elf, bootcode.bin and loader.bin are the GPU firmware and 
     bootloaders. Their licence is described in 'LICENCE.broadcom'. The 
     kernel.img files are builds of the Linux kernel, released under the GPL (see 
     COPYING.linux)
**** ./debug: pre-built modules for the kernel_debug.img
**** ./extra: System.map files for the provided kernel builds
**** ./hardfp: userspace VideoCoreIV libraries built for the armv6 hardfp ABI
**** ./modules: pre-built modules for kernel.img
**** ./opt/vc: includes userspace libraries for the VideCoreIV (EGL/GLES/OpenVG 
      etc). See ./opt/vc/LICENCE for licencing terms

*** gpio
https://elixir.free-electrons.com/linux/v3.3/source/Documentation/gpio.txt
https://falsinsoft.blogspot.nl/2012/11/access-gpio-from-linux-user-space.html
*** i2c
http://elinux.org/Interfacing_with_I2C_Devices
*** userland

*** Toolchain for broadcom
https://github.com/raspberrypi/tools/tree/master/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian
Source code for ARM side libraries for interfacing to Raspberry Pi GPU. 

*** DEVICE TREE
https://www.raspberrypi.org/documentation/configuration/device-tree.md

config.txt - Uncomment required external interfaces (SPI, I2C, I2S) and the peripherals that use them

*** PROJECTS

http://stevenhickson.blogspot.com/

**** SERVERS

***** CLOUD - Owncloud
Open sourced. Mature. Has enterprise edition also.
https://owncloud.org/

****** 
http://www.techradar.com/how-to/computing/how-to-set-up-a-raspberry-pi-powered-cloud-service-1316017/2


****** nginx and owncloud
https://pimylifeup.com/raspberry-pi-owncloud/
sudo raspi-config # locale en_US.UTF8
sudo usermod -a -G www-data www-data
sudo apt-get install nginx openssl ssl-cert php5-cli php5-sqlite php5-gd php5-common php5-cgi sqlite3 php-pear php-apc curl libapr1 libtool curl libcurl4-openssl-dev php-xml-parser php5 php5-dev php5-curl php5-gd php5-fpm memcached php5-memcache varnish
sudo openssl req $@ -new -x509 -days 730 -nodes -out /etc/nginx/cert.pem -keyout /etc/nginx/cert.key
sudo chmod 600 /etc/nginx/cert.pem
sudo chmod 600 /etc/nginx/cert.key
sudo sh -c "echo '' > /etc/nginx/sites-available/default"
sudo emacs /etc/nginx/sites-available/default

####################### COPY ######################## 
upstream php-handler {
    server 127.0.0.1:9000;
    #server unix:/var/run/php5-fpm.sock;
}
server {
    listen 80;
    server_name 192.168.1.116;
    return 301 https://$server_name$request_uri;  # enforce https
}

server {
    listen 443 ssl;
    server_name 192.168.1.116;
    ssl_certificate /etc/nginx/cert.pem;
    ssl_certificate_key /etc/nginx/cert.key;
    # Path to the root of your installation
    root /var/www/owncloud;
    client_max_body_size 1000M; # set max upload size
    fastcgi_buffers 64 4K;
    rewrite ^/caldav(.*)$ /remote.php/caldav$1 redirect;
    rewrite ^/carddav(.*)$ /remote.php/carddav$1 redirect;
    rewrite ^/webdav(.*)$ /remote.php/webdav$1 redirect;
    index index.php;
    error_page 403 /core/templates/403.php;
    error_page 404 /core/templates/404.php;
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    location ~ ^/(?:\.htaccess|data|config|db_structure\.xml|README) {
        deny all;
    }
    location / {
        # The following 2 rules are only needed with webfinger
        rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
        rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;
        rewrite ^/.well-known/carddav /remote.php/carddav/ redirect;
        rewrite ^/.well-known/caldav /remote.php/caldav/ redirect;
        rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;
        try_files $uri $uri/ index.php;
    }
    location ~ \.php(?:$|/) {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS on;
        fastcgi_pass php-handler;
   }
   # Optional: set long EXPIRES header on static assets
   location ~* \.(?:jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {
        expires 30d;
        # Optional: Don't log access to assets
        access_log off;
   }
}

####################### PASTE ######################## 

sudo emacs /etc/php5/fpm/php.ini

####################### FIND ######################## 
upload_max_filesize = 2000M
post_max_size = 2000M
####################### REPLACE ######################## 

sudo emacs /etc/php5/fpm/pool.d/www.conf
 listen = 127.0.0.1:9000

sudo nano /etc/dphys-swapfile
 CONF_SWAPSIZE = 512

sudo reboot

***** DONE CLOUD - CloudNimbus
https://cloudnimbus.org/
Close sourced. Still in development.

***** DONE SambaServer
https://www.howtogeek.com/139433/how-to-turn-a-raspberry-pi-into-a-low-power-network-storage-device/

sudo apt-get update

sudo apt-get install ntfs-3g
sudo fdisk -l
lsblk

sudo apt-get install samba samba-common-bin

sudo mkdir -m 1777 /srv/smb
sudo mount -t auto /dev/sda1 /srv/smb
sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.$(date +%F)

workgroup = workgroup_name
wins support = yes
security = user

[SMB]
  comment = Samba share
  path = /srv/smb
  valid users = @users
  force group = users
  browseable = yes
  read only = no
  writeable = yes
  only guest = no
  create mask = 0777
  directory mask = 0777
  public = no

testparm

service samba restart
or
sudo /etc/init.d/samba restart
or
sudo service smbd restart
sudo service nmbd restart

smbpasswd -a root
smbpasswd -a pi

pdbedit -L #list samba users

smbclient -L localhost 


ControlPanel->Network and Internet -> Network and Sharing Center -> Advanced sharing settings
-> All Networks
Enable file sharing for devices that use 40- or 56- bit encryption


***** DONE GitServer
https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server

- SERVER:
passwd
sudo raspi-config // enable ssh etc
sudo apt-get update
sudo apt-get upgrade

- CLIENT:
ssh-keygen
scp ~/.ssh/id_rsa <username>@<ipaddr>:/tmp/

SERVER
sudo apt-get install git
sudo adduser git
su git
cd
mkdir .ssh
chmod 700 .ssh
touch .ssh/authorized_keys
chmod 600 .ssh/authorized_keys
cat /tmp/id_rsa_hom.pub >> .ssh/authorized_keys
sudo groupadd git-scm
sudo usermod -g git-scm git

sudo mkdir /srv/git
sudo chgrp git-scm /srv/git
sudo chmod 775 /srv/git

mkdir /srv/git/<project>.git
cd <project>.git
git init --bare --shared

- CLIENT:
cd <>
git init
git config --local user.name "<>"
git config --local user.email "<>"
echo -e ".gitignore\n*~\n" > .gitignore
git add .
git commit -m "Initial commit"
git remote add origin git@<>:/srv/git/gtd2.git
git push origin master

- SERVER
cat /etc/shells   # see if `git-shell` is already in there.  If not...
which git-shell   # make sure git-shell is installed on your system.
sudo nano /etc/shells  # and add the path to git-shell from last command
sudo chsh git -s $(which git-shell)




***** SQL
http://www.raspberry-projects.com/pi/software_utilities/web-servers/mysql
***** Webserver
How to set up a secure Raspberry Pi web server, mail server and Owncloud installation
https://www.pestmeester.nl/
http://raspberrywebserver.com/

**** Timelapse camera

**** Presentation

**** git-evening
sudo mount -o uid=pi,gid=pi /dev/sda1 /mnt/USB
https://www.reddit.com/r/raspberry_pi/comments/2pae9i/disable_usb_automount/
~/.config/pcmanfm/LXDE/pcmanfm.conf 

yourcommandhere | find /i "the text you're looking for"
if not errorlevel 1 (
   echo The stuff you want to do
   echo goes here
)

**** MS AI Image recogniztion (github)

*** REMOTE CONNECTIVITY
https://www.raspberrypi.org/documentation/remote-access/access-over-Internet/README.md
**** Without port forwarding
https://www.dataplicity.com/ 1st device free, $2/mon
https://remote-iot.com/web/pricing.htm $5, 50 devices
**** VNC
https://www.raspberrypi.org/documentation/remote-access/vnc/README.md

*** Static Ip, Raspberry pi
https://raspberrypi.stackexchange.com/questions/37920/how-do-i-set-up-networking-wifi-static-ip-address
*** SYSTEM
Standalone Boot process
https://github.com/raspberrypi/noobs/wiki/Standalone-partitioning-explained

Noob Partitioning
https://github.com/raspberrypi/noobs/wiki/Standalone-partitioning-explained


*** Serial Port
Rpi 3 onwards :
/dev/tty0 or 
/dev/serial0 -- maps to correct port irrespective of model
https://www.raspberrypi.org/documentation/configuration/uart.md
http://spellfoundry.com/2016/05/29/configuring-gpio-serial-port-raspbian-jessie-including-pi-3/
http://elinux.org/RPi_Serial_Connection

*** TO BUY
- Soldering iron
- Solder leaded/unleaded
- De-solder wick
- Wet sponge and gauge
*** Access Point AP and change wifi password
https://raspberrypi.stackexchange.com/questions/50853/connect-headless-pi-to-arbitrary-wifi-network

** CONSOLIDATE DATA

Hook old drive to Linux
Scanfor virus
Repeat

Get new drive
Transfer data
Format old drive and use for backups

https://askubuntu.com/questions/69363/mount-single-partition-from-image-of-entire-disk-device

*** Backup

**** Sync source and destination
rsync -aPz $SOURCE/ $TARGET
sudo rsync -aPz --exclude-form='~/rsync-exclude-list' /media/T-2/show /media/T-4/
sudo rsync -aPz --delete --exclude recovery_taurus-1 --exclude 2014-10-25/ /srv/smba/show /media/user/SFIVER-11

**** List files that do not exist in $TARGET
rsync -avun --delete $TARGET $SOURCE  |grep "^deleting "
rsync -avun --delete /media/T-4/show /media/T-2/show  



*** Mount raw disk image
sudo losetup -Pf disk_image.raw
*** Automount Fstab
sudo blkid
sudo emacs /etc/fstab
UUID=""   /srv/smba      ntfs      auto,nofail,user,rw       0     0
UUID=""   /srv/smba      ntfs      auto,umask=000,nofail,user,rw       0     0
sudo mount -a
chown /srv/smba

** SVN
svn revert . --recursive
svn update

#List/search all the files
svn list -R <URL>

** TV / STB
*** BASICS
http://www.itvdictionary.com/set-top_box.html
*** TUNER
**** NIM(Network Interface Module) = Tuner + Demod
Half NIM means 
 Only Tuner RF part included
 Not include Demodulator in this CAN. 
 LNA output is IF
 Demodulator is on the other PCBs.

**** US TV BROADCAST CHANNEL MAP

https://nocable.org/browse-locations
https://www.rabbitears.info/search.php
https://www.rabbitears.info/market.php
http://otadtv.com/frequency/index.html

|      RF | Center |           |
| Channel |   Freq | Bandwidth |
|---------+--------+-----------|
|      14 |    473 |   470-476 |
|      15 |    479 |   476-482 |
|      16 |    485 |   482-488 |
|      17 |    491 |   488-494 |
|      18 |    497 |   494-500 |
|      19 |    503 |   500-506 |
|      20 |    509 |   506-512 |
|      21 |    515 |   512-518 |
|      22 |    521 |   518-524 |
|      23 |    527 |   524-530 |
|      24 |    533 |   530-536 |
|      25 |    539 |   536-542 |
|      26 |    545 |   542-548 |
|      27 |    551 |   548-554 |
|      28 |    557 |   554-560 |
|      29 |    563 |   560-566 |
|      30 |    569 |   566-572 |
|      31 |    575 |   572-578 |
|      32 |    581 |   578-584 |
|      33 |    587 |   584-590 |
|      34 |    593 |   590-596 |
|      35 |    599 |   596-602 |
|      36 |    605 |   602-608 |
|      37 |    611 |   608-614 |
|      38 |    617 |   614-620 |
|      39 |    623 |   620-626 |
|      40 |    629 |   626-632 |
|      41 |    635 |   632-638 |
|      42 |    641 |   638-644 |
|      43 |    647 |   644-650 |
|      44 |    653 |   650-656 |
|      45 |    659 |   656-662 |
|      46 |    665 |   662-668 |
|      47 |    671 |   668-674 |
|      48 |    677 |   674-680 |
|      49 |    683 |   680-686 |
|      50 |    689 |   686-692 |
|      51 |    695 |   692-698 |
|      52 |    701 |   698-704 |
|      53 |    707 |   704-710 |
|      54 |    713 |   710-716 |
|      55 |    719 |   716-722 |
|      56 |    725 |   722-728 |
|      57 |    731 |   728-734 |
|      58 |    737 |   734-740 |
|      59 |    743 |   740-746 |
|      60 |    749 |   746-752 |
|      61 |    755 |   752-758 |
|      62 |    761 |   758-764 |
|      63 |    767 |   764-770 |
|      64 |    773 |   770-776 |
|      65 |    779 |   776-782 |
|      66 |    785 |   782-788 |
|      67 |    791 |   788-794 |
|      68 |    797 |   794-800 |
|      69 |    803 |   800-806 |
|         |        |           |



	guint32 const TunerSource::atsc_frequency_for[] = { // mapping of atsc broadcast major number to frquency

			/* WARNING:  INDEX DEPENDENT - DO NOT MODIFY POSITION */

						/* 0 */    /* 1 */    /* 2 */    /* 3 */    /* 4 */    /* 5 */    /* 6 */    /* 7 */    /* 8 */    /* 9 */
			/* 0 */         0,         0,         0,         0,         0,         0,         0,         0,         0,         0,
			/* 1 */         0,         0,         0,         0, 473000000, 479000000, 485000000, 491000000, 497000000, 503000000,
			/* 2 */ 509000000, 515000000, 521000000, 527000000, 533000000, 539000000, 545000000, 551000000, 557000000, 563000000,
			/* 3 */ 569000000, 575000000, 581000000, 587000000, 593000000, 599000000, 605000000, 611000000,         0, 623000000,
			/* 4 */ 629000000, 635000000, 641000000, 647000000, 653000000, 659000000, 665000000, 671000000, 677000000, 683000000,
			/* 5 */ 689000000, 695000000, 701000000, 707000000, 713000000, 719000000, 725000000, 731000000, 737000000, 743000000,
			/* 6 */ 749000000, 755000000, 761000000, 767000000, 773000000, 779000000, 785000000, 791000000, 797000000, 803000000

	};

**** ISDB-T BROADCAST CHANNEL MAP
https://linuxtv.org/wiki/index.php/ISDB-T_Frequency_Table
# UHF channels 14 to 69

|      RF |    Center |           |
| Channel |      Freq | Bandwidth |
|---------+-----------+-----------|
|      14 | 473142857 |         6 |
|      15 | 479142857 |           |
|      16 | 485142857 |           |
|      17 | 491142857 |           |
|      18 | 497142857 |           |
|      19 | 503142857 |           |
|      20 | 509142857 |           |
|      21 | 515142857 |           |
|      22 | 521142857 |           |
|      23 | 527142857 |           |
|      24 | 533142857 |           |
|      25 | 539142857 |           |
|      26 | 545142857 |           |
|      27 | 551142857 |           |
|      28 | 557142857 |           |
|      29 | 563142857 |           |
|      30 | 569142857 |           |
|      31 | 575142857 |           |
|      32 | 581142857 |           |
|      33 | 587142857 |           |
|      34 | 593142857 |           |
|      35 | 599142857 |           |
|      36 | 605142857 |           |
|      37 |  NOT-USED |           |
|      39 | 623142857 |           |
|      40 | 629142857 |           |
|      41 | 635142857 |           |
|      42 | 641142857 |           |
|      43 | 647142857 |           |
|      44 | 653142857 |           |
|      45 | 659142857 |           |
|      46 | 665142857 |           |
|      47 | 671142857 |           |
|      48 | 677142857 |           |
|      49 | 683142857 |           |
|      50 | 689142857 |           |
|      51 | 695142857 |           |
|      52 | 701142857 |           |
|      53 | 707142857 |           |
|      54 | 713142857 |           |
|      55 | 719142857 |           |
|      56 | 725142857 |           |
|      57 | 731142857 |           |
|      58 | 737142857 |           |
|      59 | 743142857 |           |
|      60 | 749142857 |           |
|      61 | 755142857 |           |
|      62 | 761142857 |           |
|      63 | 767142857 |           |
|      64 | 773142857 |           |
|      65 | 779142857 |           |
|      66 | 785142857 |           |
|      67 | 791142857 |           |
|      68 | 797142857 |           |
|      69 | 803142857 |           |

**** ISDB-T
    Parameters
      http://rfmw.em.keysight.com/wireless/helpfiles/n7623b/Content/Main/carrier_for_isdb-t.htm
    DVB-API
      http://www.chiark.greenend.org.uk/doc/linux-doc-2.6.32/html/media/ch09s03.html

**** Difference between ISDB-T and ISDB-Tb


|                   | ISDB-T                | ISDB-Tb                        |        |
|                   |                       | ISDB-T International           | ISDB-S |
|                   |                       | SBTVD                          |        |
|-------------------+-----------------------+--------------------------------+--------|
|                   | Japan                 | Brazil etc                     |        |
|                   |                       |                                |        |
|                   |                       | NOT inter-operable with ISDB-T |        |
|                   |                       |                                |        |
| Modulation        | QAM/QPSK/DQPSK - OFDM | BST-OFDM QAM/QPSK/DQPSK        | PSK    |
|                   |                       |                                |        |
| Video compression | H.262 MPEG-2          | H.264/MPEG-4 AVC               |        |
|                   |                       |                                |        |
| Middleware        | BML                   | Ginga (Ginga-NCL and Ginga-J)  |        |
|                   | (Declarative)         | (Declarative and procedural)   |        |
|                   |                       |                                |        |
| DRM               | B-CAS                 | Open Receptions                |        |
|                   | (CSA MULTI2)          |                                |        |
|                   |                       |                                |        |
|                   |                       | 30fps for portable rx          |        |
|                   |                       |                                |        |
|                   |                       | Western character set          |        |
|                   |                       |                                |        |
|                   |                       | Transmitter emission mask      |        |
|                   |                       |                                |        |
| Return channel    |                       |                                |        |
|                   |                       |                                |        |

**** NIT / SDT

NIT 
Network Information Table
Luminato Administration panel has the option to generate NIT.
Configure:
 Network ID : 0xFF01
 Original Network ID : 0xFF01 (65281)
 TSID 

*** VIDEO
**** MPEG2 
***** Understanding GOPs and Frame Types
A major feature of MPEG-2 encoding is its ability to remove redundancy, not only within a frame, but also among a group of frames. 
MPEG-2 uses three frame types (I, P, and B) to represent the video. 
A group of pictures (GOP) setting defines the pattern of the three frame types used. 
These three picture types are defined in the following ways.

Intra (I): Also known as the key frame. Every GOP contains one I-frame. The I-frame is the only MPEG-2 frame type which can be fully decompressed without any reference to frames that precede or follow it. It is also the most data-heavy, requiring the most disk space. If you want to place an I-frame at a scene change or some other specific frame location, you need to manually set it using the Preview window. This is known as a forced I-frame. See Adding Markers to a Clip for more information.
Predicted (P): Encoded from a "predicted" picture based on the closest preceding I- or P-frame. P-frames typically require much less disk space than do I-frames because they reference a preceding I- or P-frame in the GOP.
Note: Both I-frames and P-frames are also known as reference frames, because a B-frame may refer to either one or both frame types.
Bi-directional (B): Encoded from an interpolation of succeeding and preceding reference frames, either I-frame or P-frame. B-frames are the most storage-efficient MPEG-2 frame type, requiring the least amount of disk space.

B-Frames are Bidirectional frames. They can get information from the previous or following I or P-Frames. With a closed GOP, the B-Frame(s) at the end can only use data from the previous I or P-Frame, and as a result, they will be larger than they might be if the GOP is open. With an open GOP, it can "look" beyond the GOP boundary for the data. As a result, they'll be smaller usually. The upshot is that the quality will be better by a little bit for the same file size with open GOPs. And jdobbs, as always, was right.
Closed GOPs are useful only if you are planning to do some editing of the MPEG.

The GOP structure is often referred by two numbers, for example, M=3, N=12. The first number tells the distance between two anchor frames (I or P). The second one tells the distance between two full images (I-frames): it is the GOP size. For the example M=3, N=12, the GOP structure is IBBPBBPBBPBBI. 
For example, in a sequence with pattern IBBBBPBBBBPBBBBI, the GOP size is equal to 15 (length between two I frames) and distance between two anchor frames (M value) is 5 (length between I and P frames or length between two consecutive P Frames).
***** LINKS
http://www.geniusdv.com/news_and_tutorials/2009/01/advanced_gop-ology_draft.php
https://kvssoft.wordpress.com/2015/01/28/mpeg-dash-gop/

**** PES HEADER
http://dvd.sourceforge.net/dvdinfo/pes-hdr.html
http://happy.emu.id.au/lab/tut/dttb/dtbtut4b.htm

*** MIDDLEWARE
DVB
 GEM 
ISDB-Tb
 Ginga-NCL (Lua)
 Ginga-J (Java)

*** LINKS
http://forum.doom9.org/

UK Frequency allocation
https://www.ofcom.org.uk/__data/assets/pdf_file/0016/103309/uk-fat-2017.pdf

*** TOOLS
avconv
exiftool
ffprobe
gspot - For PS file analysis, shows GOP structure
gopchop - For PS Video chopping tool at GOP boundries 
dvbsnoop - Stream analysis DVB Section centric
*dvbinspector* - Javabased, shows packet details
http://www.digitalekabeltelevisie.nl/dvb_inspector/download.shtml
mediainfo
mplayer

tsreader
http://www.coolstf.com/tsreader

TSPE - Transport Stream Packet Editor / Analyzer
http://www.bitstreamtools.com/download/index.php

elecard stream analyser - 
https://www.elecard.com/products/video-analysis/stream-analyzer

Zond 265 - HEVC Analyzer
http://www.solveigmm.com/en/products/zond/

Perl based library, implement callback
http://search.cpan.org/dist/Linux-DVB-DVBT-TS/lib/Linux/DVB/DVBT/TS.pm

*** STANDARDS

**** DVB
ETSI EN 300 429: "Digital Video Broadcasting (DVB); Framing structure, channel coding and modulation for cable systems".
ETSI TS 102 606: "Digital Video Broadcasting (DVB); Generic Stream Encapsulation (GSE) Protocol".
ETSI TS 102 771: "Digital Video Broadcasting (DVB); Generic Stream Encapsulation (GSE) implementation guidelines".
ETR 211 'Digital broadcasting systems for television: Guidelines on implementation and usage of service information (SI) in DVB Systems'
ETR 289 'Digital video broadcasting (DVB): Support for use of scrambling and conditional access (CA) within digital broadcasting systems.
IEC 60728-1 (May 2008): "Cable networks for television signals, sound signals and interactive services - Part 1: System performance of forward paths".
IEEE 802.14: "Broadband Cable Access Method and Physical Layer Specification". 
ETSI EN 300 468: "Digital Video Broadcasting (DVB); Specification for Service Information (SI) in DVB Systems".

ISO/IEC 13818-1: "Information technology - Generic Coding of moving pictures and associated audio information: Systems".
IEC 60169-2 (1965) ' Radio Frequency Connectors: Part 2 "Coaxial unmatched connector [including Amendment No.1 (1982)]"  2


television standards used around the world.
Check these Web sites for more information about world-wide frequency allocation.
http://www.blondertongue.com/CATV-Broadband-Reference-Literature
http://www.acterna.com
http://www.apple.com
http://www.c-cor.com
http://www.atxincorporated.com
http://www.alkenmrs.com

** UBOOT
http://www.denx.de/wiki/U-Boot/WebHome

** UBUNTU
*** Antivirus ClamAV
sudo freshclam && sudo clamscan / -r -i > ~/Desktop/clamscan-$(date +%F).log
*** Firewall
firewall 
help.ubuntu.com/community/Firewall
iptables - UFW - Gufw

*** Partitioning

https://askubuntu.com/questions/343268/how-to-use-manual-partitioning-during-installation
https://help.ubuntu.com/community/PartitioningSchemes
http://www.psychocats.net/ubuntu/partitioning
https://help.ubuntu.com/community/HowtoPartition
https://www.howtogeek.com/howto/35676/how-to-choose-a-partition-scheme-for-your-linux-pc/

|           |         |          |          | LABEL |            |   |
|-----------+---------+----------+----------+-------+------------+---|
| /dev/sda1 | /boot   | Primary  | 1GB      | boot  | ext2       |   |
| /dev/sda2 |         | Extended | 464.76GB |       |            |   |
| /dev/sda5 |         |          | 10GB     | swap  | linux-swap |   |
| /dev/sda6 | /       |          | 54GB     | root  | ext4       |   |
| /dev/sda7 | /home   |          | 100GB    | home  | ext4       |   |
| /dev/sda8 | /mnt/om |          | 300.76   | om    | ext4       |   |
|           |         |          |          |       |            |   |

*** Low disk space on boot
sudo apt autoremove --purge

df                          # Check the disk usage
dpkg -l linux-image*        # List all the kernel images
uname -r                    # Get the currently used kernel image
cat /proc/version_signature #
sudo dpkg --purge linux-image-4.4.0-24-generic
sudo apt-get remove linux-image-<ver>-{}  #Insert the kernel images to remove, DONOT REMOVE CURRENT AND LATEST
sudo dpkg --purge linux-image-<ver>-generic 
sudo dpkg --purge linux-image-extra-<ver>-generic

sudo apt-get autoremove # Cleanup dependency








*** New Drive, Installation
https://help.ubuntu.com/community/InstallingANewHardDrive

blkid
cgdisk /dev/sdb
mkfs -t ext4 /dev/sdb1
mkdir /media/storage
sudo emacs /etc/fstab
  UUID="b4c93..."  /media/storage  ext4  defaults  0  2
mount -av
sudo chown [u]:[u] /media/storage


*** Interrup counter
vmstat

** VLAN
https://wiki.wireshark.org/VLAN
https://www.pluralsight.com/blog/tutorials/cisco-ccna-vlan
https://www.examcollection.com/certification-training/ccnp-configure-and-verify-vlans-and-trunking.html
https://www.sbprojects.net/projects/raspberrypi/vlan.php

** X
*** Busybox
http://www.olafdietsche.de/2015/01/19/compiling-busybox-for-arm
*** Conversions
http://www.cantwellengineering.com/calculator/convert/dBmV
*** Jenkins / Docker
https://www.cloudbees.com/blog/get-started-jenkins-20-docker
https://engineering.riotgames.com/news/putting-jenkins-docker-container
