

* NOTES
** BUILD SYSTEMS
*** Meson-Ninja
http://mesonbuild.com
https://ninja-build.org/
*** Yocto
** CONSOLIDATE DATA

Hook old drive to Linux
Scanfor virus
Repeat

Get new drive
Transfer data
Format old drive and use for backups

https://askubuntu.com/questions/69363/mount-single-partition-from-image-of-entire-disk-device

** ENCRYPTION
http://lifehacker.com/a-beginners-guide-to-encryption-what-it-is-and-how-to-1508196946
http://lifehacker.com/five-best-file-encryption-tools-5677725
http://lifehacker.com/whats-the-best-file-encryption-tool-1683834660

** GIT
*** Initial Setup
git config --local user.name "om"
git config --local user.email "om@--.com"
git config --local core.editor emacs
git config --list
git config user.name

.gitignore
The rules for the patterns you can put in the .gitignore file are as follows:
 Blank lines or lines starting with # are ignored.
 Standard glob patterns work.
 You can start patterns with a forward slash (/) to avoid recursivity.
 You can end patterns with a forward slash (/) to specify a directory.
 You can negate a pattern by starting it with an exclamation point (!).

Glob patterns are like simplified regular expressions that shells use. 
An asterisk (*) matches zero or more characters; 
[abc] matches any character inside the brackets (in this case a, b, or c); 
a question mark (?) matches a single character; 
and brackets enclosing characters separated by a hyphen ([0-9]) matches any character between them (in this case 0 through 9). 
You can also use two asterisks to match nested directories; a/**/z would match a/z, a/b/z, a/b/c/z, and so on.


*** Basics
Initializing a repo
 git init

Adding files to be tracked
 git add <filename | directory >
Giving Directory name will add the entire contents of the directory into tracking
Its a multi-purpose command it can
Add file for tracking
Add file for staging
Merg-conflicted files as resolved

Committing the changes
 git commit -m 'some commit message'

Cloning existing repos
 git clone <repo-url>

Cloning to a specific directory
 git clone <repo-url> <dir>

url can use 
 https:// 
 git://
 user@server:path/to/repo.git

Checking the working tree status
 git status
Short status
 git status [-s | --short]
| 1st col    | 2nd col      |                           |
| Stage area | Working area |                           |
|------------+--------------+---------------------------|
| ?          | ?            | Untracked file            |
|            | M            | Unstaged file             |
| M          | M            | Staged and modified again |
| A          |              | Newly added staged file   |
| M          |              | Staged file               |


Check differences in *un* staged files
 git diff

Check differences in *staged* files
 git diff [--staged | --cached]

Commiting the staged changes
 git commit // launches editor for entering commit message
 git commit -m 'Commit message'
 git commit -a // auto adds all tracked changed files

Removing a file completely
 [rm <filename>]
 git rm <filename> //stages for removal
 git commit -m 'message'
 git rm -f <filename> // force removal, if it has local changes

Removing a file from tracking or Untracking a file
 git rm --cached <filename>

Moving or Renaming a file
 git mv file_from file_to

Checking commit logs
 https://git-scm.com/book/en/v2/Git-Basics-Viewing-the-Commit-History#log_options
 git log
 git log -p -2 # Details of last 2 checkins
 git log --stat # Displays statistics like files modifed and the extent of modification
 git log --pretty=oneline --graph
 git log --pretty=format:"%h - %an, %ar : %s"
 git log --since=yyyy-mm-dd
 git log --author=""
 git log --grep="" # use --all-match to use author and grep together
 git log -S function_name

*** Undoing
Amending last commit
 git commit --amend

Unstaging a staged file
 git reset HEAD <file>

Revert to previous commit (throwing away local changes)
 git checkout -- <file>

*** Remotes
Adding a remote
 git remote add <name> <remote url>

List of remotes
 git remote -v

Fetch remote repo, but not merge
Gets all the branches and makes available for inspection or merging
 git fetch <remote-name>
Tries to merge to local repo from the tracked remote repo
 git pull

Pushing changes to remote
 git push <remote> <branch>
 git push origin master

Show remote details
 git remtoe show <remote-name>

Rename a remote
 git remote rename <org-name> <new-name>

Remove a remote
 git remote remove <remote-name>

*** Branching
Light weigth branching
Branch names are pointers to commit blobs
Head is a pointer to the current Branch pointer

Create branch
 git branch <branch name> 
 git log --oneline --decorate #check where the HEAD pointer 

Switch to branch
 git checkout <branchname>

Create branch and switch to branch
 git checkout -b <branchname>

Merging
 git checkout <master>
 git merge <branchname>
 git branch -d <branchname>

To pull recent changes from master branch to current branch
 git merge <master>
 
On conflict
Resolve conflict and add

 git mergetool # visual tool for merging and removing conflict

*** Links
http://rogerdudler.github.io/git-guide/


** GSTREAMER
Upstream : git://anongit.freedesktop.org/gstreamer/
           https://cgit.freedesktop.org/gstreamer/
Mirrored : https://github.com/GStreamer

FAQ
http://gstreamer.freedesktop.org/data/doc/gstreamer/head/faq/html/

DOCS
http://gstreamer.freedesktop.org/documentation

 GLib
 https://developer.gnome.org/glib/stable/

 GObject
 https://developer.gnome.org/gobject/stable/
>>>  https://developer.gnome.org/gobject/stable/chapter-gobject.html

Push Pull Modes of Pads
https://gstreamer.freedesktop.org/data/doc/gstreamer/head/pwg/html/section-scheduling-randomxs.html
http://www.mediatools.cs.ucl.ac.uk/nets/newvideo/browser/gst-cvs/gstreamer/docs/design/part-push-pull.txt

E.g scenarios
http://fossies.org/linux/gstreamer/docs/design/part-scheduling.txt



*** DEBUG
GST_DEBUG_BIN_TO_DOT_FILE_WITH_TS(GST_BIN(_pipeline),  GST_DEBUG_GRAPH_SHOW_ALL, "mygraph");

*** Cerbero
Upstream : git://anongit.freedesktop.org/gstreamer/cerbero
Mirrored : https://github.com/GStreamer/cerbero

Doc
https://github.com/centricular/cerbero-docs/blob/master/start.md
https://gstreamer.freedesktop.org/documentation/installing/building-from-source-using-cerbero.html


*** BASICS
A framework for creating streaming media applications. Inspired from DirectShow.
Based on plugins that will provide various functionalities, which can be linked to form pipelines, which defines the flow of data.
GUI editors are also available.

**** GSTREAMER TOOLS

***** gst-inspect

***** gst-launch

***** gst-eiditor

**** GSTREAMER CORE FRAMEWORK

***** Media agnostic base clasess

***** Message bus

***** Type negotiation

***** Plugin system

***** Synchronisation

**** GSTREAMER PLUGINS

***** Protocols
- http://
- file://
- rtsp://

***** Sources
- alsa
- v4l2 / DVB API
- tcp/udp
***** Formats / Containers
- avi
- mp4
- ogg

***** Codecs
- mp3
- mpeg4
- vorbis
- theora
***** Filters
- converters
- mixers
- effects

***** Sinks
- alsa
- xvideo
- tcp/udp

***** 3rd party


** HARD DISK HEALTH
sudo apt get install smartmontools
smartctl 
https://www.smartmontools.org/
https://wiki.archlinux.org/index.php/S.M.A.R.T.


** LINUX

*** Secure programming
https://www.dwheeler.com/secure-programs/Secure-Programs-HOWTO/index.html

*** Symbols
insmod hello.ko
cat /proc/kallsyms | grep hello
cat Module.symvers
nm hello.ko

** RASPBERRYPI 
https://www.raspberrypi.org/documentation/linux/kernel/README.md

*** Building NOOBS from source

get_package_version

get_kernel_version
update_github_kernel_version
select_kernelconfig


output in output/images directory

Command line
 update-firmware
  update_gtihub_package_version( PACKAGE=rpi-firmware, GITHUB_REPO=rapberrypi/firmware, BRANCH=stable )
  // updates the broadcom firmware binaries from git raspberrypi/firmware stable 

 update-userland
  update_gtihub_package_version( PACKAGE=rpi-userland, GITHUB_REPO=rapberrypi/userland, BRANCH=master )

 update-kernel
  update_gtihub_package_version( GITHUB_REPO=rapberrypi/linux, BRANCH=rpi-4.4.y )

 skip-kernel-rebuild
  build recovery without comletely rebuilding both kernels

 nobuild

ERR : noob build fail: RCC: Error in 'icons.qrc': Cannot find file 'translation_ca.qm'
SLN :  ./buildroot/output/host/usr/bin/lrelease ./recovery/translation_*.ts

*** CONFIG
https://github.com/RPi-Distro/raspi-config

sudo raspi-config // /boot/config.txt
 user/password
 hostname
 ssh
 spi/i2c/serial/audio

vcgencmd get_config <config>

**** Initial Config
passwd #change default password
Edit .bashrs under /etc/skel
sudo adduser <username>
update-alternatives --set editor /usr/bin/vim.tiny
sudo visudo
<username>   ALL = NOPASSWD: ALL
sudo userdel -r pi
sudo reboot
#login with new <username>
sudo raspi-config
#check user/password
#change hostname
#enable ssh
#enable spi/i2c/serial/audio

***** DO Customisation script/patch-file for new installs

**** Audio
amixer cset numid=3 0 # 0:Auto 1:Analog 2:HDMI

****  Change host name
  sudo hostname <name>
  sudo raspi-config

**** Creating new me user
  sudo adduser me
  sudo usermod -G git-scm me
  id me
  sudo mkdir /t
  sudo chown me:me /t
  sudo visudo
  sudo useradd me sudo
  groups
  sudo usermod -G sudo me
  su me

**** Preparting GTD
Generate git keys
  ssh-keygen
  cp ./.ssh/id_rsa_rpi.pub /tmp

  mkdir -p show/gtd
  cd ./show/gtd/
  git clone git@<git-loc>:/srv/git/gtd2.git
  cp ./gtd2/ref.emacs ~
  mv ~/ref.emacs .emacs
  emacs ~/.emacs

Create GTD link
  ln -s /home/me/show/gtd/ /t

*** firmware
Pre-compiled binaries of the current Raspberry Pi kernel and modules, userspace libraries, and bootloader/GPU firmware.
**** ./boot: *start.elf, bootcode.bin and loader.bin are the GPU firmware and 
     bootloaders. Their licence is described in 'LICENCE.broadcom'. The 
     kernel.img files are builds of the Linux kernel, released under the GPL (see 
     COPYING.linux)
**** ./debug: pre-built modules for the kernel_debug.img
**** ./extra: System.map files for the provided kernel builds
**** ./hardfp: userspace VideoCoreIV libraries built for the armv6 hardfp ABI
**** ./modules: pre-built modules for kernel.img
**** ./opt/vc: includes userspace libraries for the VideCoreIV (EGL/GLES/OpenVG 
      etc). See ./opt/vc/LICENCE for licencing terms


*** userland

*** Toolchain for broadcom
https://github.com/raspberrypi/tools/tree/master/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian
Source code for ARM side libraries for interfacing to Raspberry Pi GPU. 

*** STARTED DEVICE TREE
https://www.raspberrypi.org/documentation/configuration/device-tree.md

config.txt - Uncomment required external interfaces (SPI, I2C, I2S) and the peripherals that use them

*** PROJECTS

http://stevenhickson.blogspot.com/

**** SERVER

***** CLOUD - Owncloud
Open sourced. Mature. Has enterprise edition also.
https://owncloud.org/

****** 
http://www.techradar.com/how-to/computing/how-to-set-up-a-raspberry-pi-powered-cloud-service-1316017/2


****** nginx and owncloud
https://pimylifeup.com/raspberry-pi-owncloud/
sudo raspi-config # locale en_US.UTF8
sudo usermod -a -G www-data www-data
sudo apt-get install nginx openssl ssl-cert php5-cli php5-sqlite php5-gd php5-common php5-cgi sqlite3 php-pear php-apc curl libapr1 libtool curl libcurl4-openssl-dev php-xml-parser php5 php5-dev php5-curl php5-gd php5-fpm memcached php5-memcache varnish
sudo openssl req $@ -new -x509 -days 730 -nodes -out /etc/nginx/cert.pem -keyout /etc/nginx/cert.key
sudo chmod 600 /etc/nginx/cert.pem
sudo chmod 600 /etc/nginx/cert.key
sudo sh -c "echo '' > /etc/nginx/sites-available/default"
sudo emacs /etc/nginx/sites-available/default

####################### COPY ######################## 
upstream php-handler {
    server 127.0.0.1:9000;
    #server unix:/var/run/php5-fpm.sock;
}
server {
    listen 80;
    server_name 192.168.1.116;
    return 301 https://$server_name$request_uri;  # enforce https
}

server {
    listen 443 ssl;
    server_name 192.168.1.116;
    ssl_certificate /etc/nginx/cert.pem;
    ssl_certificate_key /etc/nginx/cert.key;
    # Path to the root of your installation
    root /var/www/owncloud;
    client_max_body_size 1000M; # set max upload size
    fastcgi_buffers 64 4K;
    rewrite ^/caldav(.*)$ /remote.php/caldav$1 redirect;
    rewrite ^/carddav(.*)$ /remote.php/carddav$1 redirect;
    rewrite ^/webdav(.*)$ /remote.php/webdav$1 redirect;
    index index.php;
    error_page 403 /core/templates/403.php;
    error_page 404 /core/templates/404.php;
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    location ~ ^/(?:\.htaccess|data|config|db_structure\.xml|README) {
        deny all;
    }
    location / {
        # The following 2 rules are only needed with webfinger
        rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
        rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;
        rewrite ^/.well-known/carddav /remote.php/carddav/ redirect;
        rewrite ^/.well-known/caldav /remote.php/caldav/ redirect;
        rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;
        try_files $uri $uri/ index.php;
    }
    location ~ \.php(?:$|/) {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS on;
        fastcgi_pass php-handler;
   }
   # Optional: set long EXPIRES header on static assets
   location ~* \.(?:jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {
        expires 30d;
        # Optional: Don't log access to assets
        access_log off;
   }
}

####################### PASTE ######################## 

sudo emacs /etc/php5/fpm/php.ini

####################### FIND ######################## 
upload_max_filesize = 2000M
post_max_size = 2000M
####################### REPLACE ######################## 

sudo emacs /etc/php5/fpm/pool.d/www.conf
 listen = 127.0.0.1:9000

sudo nano /etc/dphys-swapfile
 CONF_SWAPSIZE = 512

sudo reboot

***** DONE CLOUD - CloudNimbus
https://cloudnimbus.org/
Close sourced. Still in development.

***** SambaServer
https://www.howtogeek.com/139433/how-to-turn-a-raspberry-pi-into-a-low-power-network-storage-device/

sudo apt-get update

sudo apt-get install ntfs-3g
sudo fdisk -l
lsblk

sudo apt-get install samba samba-common-bin

sudo mkdir -m 1777 /srv/smb
sudo mount -t auto /dev/sda1 /srv/smb
sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.$(date +%F)

workgroup = workgroup_name
wins support = yes
security = user

[SMB]
  comment = Samba share
  path = /srv/smb
  valid users = @users
  force group = users
  browseable = yes
  read only = no
  writeable = yes
  only guest = no
  create mask = 0777
  directory mask = 0777
  public = no

testparm

service samba restart
or
sudo /etc/init.d/samba restart
or
sudo service smbd restart
sudo service nmbd restart

smbpasswd -a root
smbpasswd -a pi

pdbedit -L #list samba users

smbclient -L localhost 

***** DONE GitServer
https://git-scm.com/book/en/v2/Git-on-the-Server-Getting-Git-on-a-Server

- SERVER:
passwd
sudo raspi-config // enable ssh etc
sudo apt-get update
sudo apt-get upgrade

- CLIENT:
ssh-keygen
scp ~/.ssh/id_rsa <username>@<ipaddr>:/tmp/

SERVER
sudo apt-get install git
sudo adduser git
su git
cd
mkdir .ssh
chmod 700 .ssh
touch .ssh/authorized_keys
chmod 600 .ssh/authorized_keys
cat /tmp/id_rsa_hom.pub >> .ssh/authorized_keys
sudo groupadd git-scm
sudo usermod -g git-scm git

sudo mkdir /srv/git
sudo chgrp git-scm /srv/git
sudo chmod 775 /srv/git

mkdir /srv/git/<project>.git
cd <project>.git
git init --bare --shared

- CLIENT:
cd <>
git config --local user.name "<>"
git config --local user.email "<>"
git init
echo -e ".gitignore\n*~\n" > .gitignore
git add .
git commit -m "Initial commit"
git remote add origin git@<>:/srv/git/gtd2.git
git push origin master

- SERVER
cat /etc/shells   # see if `git-shell` is already in there.  If not...
which git-shell   # make sure git-shell is installed on your system.
sudo nano /etc/shells  # and add the path to git-shell from last command
sudo chsh git -s $(which git-shell)





***** Webserver
How to set up a secure Raspberry Pi web server, mail server and Owncloud installation
https://www.pestmeester.nl/

**** Timelapse camera

**** Presentation

**** git-evening
sudo mount -o uid=pi,gid=pi /dev/sda1 /mnt/USB
https://www.reddit.com/r/raspberry_pi/comments/2pae9i/disable_usb_automount/
~/.config/pcmanfm/LXDE/pcmanfm.conf 

*** REMOTE CONNECTIVITY
https://www.raspberrypi.org/documentation/remote-access/access-over-Internet/README.md
**** Without port forwarding
https://www.dataplicity.com/ 1st device free, $2/mon
https://remote-iot.com/web/pricing.htm $5, 50 devices
**** VNC
https://www.raspberrypi.org/documentation/remote-access/vnc/README.md

*** SYSTEM
Standalone Boot process
https://github.com/raspberrypi/noobs/wiki/Standalone-partitioning-explained

Noob Partitioning
https://github.com/raspberrypi/noobs/wiki/Standalone-partitioning-explained


*** Serial Port
Rpi 3 onwards :
/dev/tty0 or 
/dev/serial0 -- maps to correct port irrespective of model
https://www.raspberrypi.org/documentation/configuration/uart.md
http://spellfoundry.com/2016/05/29/configuring-gpio-serial-port-raspbian-jessie-including-pi-3/
http://elinux.org/RPi_Serial_Connection

** CONSOLIDATE DATA

Hook old drive to Linux
Scanfor virus
Repeat

Get new drive
Transfer data
Format old drive and use for backups

https://askubuntu.com/questions/69363/mount-single-partition-from-image-of-entire-disk-device

*** Backup

**** Sync source and destination
rsync -aPz $SOURCE/ $TARGET
sudo rsync -aPz --exclude-form='~/rsync-exclude-list' /media/T-2/show /media/T-4/
sudo rsync -aPz --delete --exclude recovery_taurus-1 --exclude 2014-10-25/ /srv/smba/show /media/user/SFIVER-11

**** List files that do not exist in $TARGET
rsync -avun --delete $TARGET $SOURCE  |grep "^deleting "
rsync -avun --delete /media/T-4/show /media/T-2/show  



*** Mount raw disk image
sudo losetup -Pf disk_image.raw
*** Fstab
sudo blkid
UUID=""   /srv/smba      ntfs      auto,nofail,user,rw       0     0
UUID=""   /srv/smba      ntfs      auto,umask=000,nofail,user,rw       0     0
sudo mount -a
chown /srv/smba


** TV / STB
*** BASICS
http://www.itvdictionary.com/set-top_box.html
*** TUNER
**** NIM(Network Interface Module) = Tuner + Demod
Half NIM means 
 Only Tuner RF part included
 Not include Demodulator in this CAN. 
 LNA output is IF
 Demodulator is on the other PCBs.

** UBUNTU
*** Antivirus ClamAV
sudo freshclam && sudo clamscan / -r -i > ~/Desktop/clamscan-$(date +%F).log
*** Firewall
firewall 
help.ubuntu.com/community/Firewall
iptables - UFW - Gufw

*** Partitioning

https://askubuntu.com/questions/343268/how-to-use-manual-partitioning-during-installation
https://help.ubuntu.com/community/PartitioningSchemes
http://www.psychocats.net/ubuntu/partitioning
https://help.ubuntu.com/community/HowtoPartition
https://www.howtogeek.com/howto/35676/how-to-choose-a-partition-scheme-for-your-linux-pc/

|           |         |          |          | LABEL |            |   |
|-----------+---------+----------+----------+-------+------------+---|
| /dev/sda1 | /boot   | Primary  | 1GB      | boot  | ext2       |   |
| /dev/sda2 |         | Extended | 464.76GB |       |            |   |
| /dev/sda5 |         |          | 10GB     | swap  | linux-swap |   |
| /dev/sda6 | /       |          | 54GB     | root  | ext4       |   |
| /dev/sda7 | /home   |          | 100GB    | home  | ext4       |   |
| /dev/sda8 | /mnt/om |          | 300.76   | om    | ext4       |   |
|           |         |          |          |       |            |   |

